// Generated by CoffeeScript 1.8.0
(function() {
  var TemplateSource, bundle, debug, fs, getInstance, middleware, pth, translate, url,
    __slice = [].slice;

  url = require('url');

  pth = require('path');

  fs = require('fs');

  getInstance = require('./translator').getInstance;

  debug = (require('debug'))('i18n');

  TemplateSource = fs.readFileSync(pth.join(__dirname, 'template.js'));

  translate = function() {
    var idx, key, template, vars, _ref, _ref1;
    key = arguments[0], vars = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (!key) {
      return "";
    }
    idx = key.indexOf(nsSeparator);
    if (idx !== -1) {
      template = ((_ref = resource[key.substr(0, idx)]) != null ? _ref[key.substr(idx + 1)] : void 0) || key.substr(idx + 1);
    } else {
      template = resource[key];
      if ("string" !== typeof template) {
        template = ((_ref1 = resource[defaultNs]) != null ? _ref1[key] : void 0) || key;
      }
    }
    if (!vars.length) {
      return template;
    }
    template = new Template(template);
    if ('object' === typeof vars[0]) {
      return template.render(vars[0], vars.slice(1));
    } else {
      return template.render.apply(template, [null].concat(__slice.call(vars)));
    }
  };

  bundle = function(_arg) {
    var defaultNs, filter, lang, module, nsSeparator, resource, service;
    resource = _arg.resource, lang = _arg.lang, nsSeparator = _arg.nsSeparator, module = _arg.module, filter = _arg.filter, service = _arg.service, defaultNs = _arg.defaultNs;
    return "(function() {\n    var __slice = [].slice;\n    var nsSeparator = '" + nsSeparator + "';\n    var defaultNs = '" + defaultNs + "';\n    var resource = " + (JSON.stringify(resource)) + ";\n    var Template = " + TemplateSource + ";\n    var translate = " + (translate.toString()) + ";\n    angular.module('" + module + "', [])\n    .factory('" + service + "', function(){\n        return {\n            lang: '" + lang + "',\n            translate: translate,\n            resource: resource\n        };\n    })\n    .filter('" + filter + "', function(){\n        return translate;\n    });\n})();";
  };

  middleware = function(_arg) {
    var cookie, defaultNs, directory, filter, module, nsSeparator, path, service, translator;
    directory = _arg.directory, cookie = _arg.cookie, path = _arg.path, nsSeparator = _arg.nsSeparator, module = _arg.module, service = _arg.service, filter = _arg.filter, defaultNs = _arg.defaultNs;
    if (path == null) {
      path = '/i18n-angular.js';
    }
    if (cookie == null) {
      cookie = 'lang';
    }
    if (nsSeparator == null) {
      nsSeparator = ':';
    }
    if (module == null) {
      module = 'i18n';
    }
    if (service == null) {
      service = 'i18n';
    }
    if (filter == null) {
      filter = 'translate';
    }
    if (defaultNs == null) {
      defaultNs = 'defualt';
    }
    translator = getInstance();
    translator.load(directory);
    return function(req, res, next) {
      var e, lang, pathname;
      pathname = url.parse(req.url).pathname;
      if (req.method === 'GET' && pathname === path) {
        lang = req.cookies[cookie];
        try {
          return res.end(bundle({
            resource: translator.langs[lang],
            lang: lang,
            module: module,
            service: service,
            filter: filter,
            nsSeparator: nsSeparator,
            defaultNs: defaultNs
          }));
        } catch (_error) {
          e = _error;
          debug(e);
          res.write(';console.error(' + JSON.stringify(e.toString()) + ');');
          return res.end();
        }
      } else {
        return next();
      }
    };
  };

  module.exports = {
    middleware: middleware,
    bundle: bundle
  };

}).call(this);
