// Generated by CoffeeScript 1.8.0
(function() {
  var bundle, getInstance, middleware, pth, url;

  url = require('url');

  pth = require('path');

  getInstance = require("./translator").getInstance;

  bundle = function(resource, lang, exportAs) {
    return ";var " + exportAs + " = {};\n(function() {\n    var resource = " + (JSON.stringify(resource)) + ";\n    " + exportAs + ".translate = function(key, ns) {\n        if (ns) {\n            return resource[ns][key];\n        } else {\n            return resource[key];\n        }\n    };\n    " + exportAs + ".resource = resource;\n    " + exportAs + ".lang = '" + lang + "';\n})();";
  };

  middleware = function(_arg) {
    var cookie, directory, exportAs, path, translator;
    directory = _arg.directory, cookie = _arg.cookie, path = _arg.path, exportAs = _arg.exportAs;
    if (path == null) {
      path = '/i18n.js';
    }
    if (cookie == null) {
      cookie = 'lang';
    }
    if (exportAs == null) {
      exportAs = 'i18n';
    }
    translator = getInstance();
    translator.load(directory);
    return function(req, res, next) {
      var e, lang, pathname;
      pathname = url.parse(req.url).pathname;
      if (req.method === 'GET' && pathname === path) {
        lang = req.cookies[cookie];
        try {
          return res.end(bundle(translator.langs[lang], lang, exportAs));
        } catch (_error) {
          e = _error;
          debug(e);
          res.write(';console.error(' + JSON.stringify(e.toString()) + ');');
          return res.end();
        }
      } else {
        return next();
      }
    };
  };

  module.exports = {
    middleware: middleware,
    bundle: bundle
  };

}).call(this);
